name: Deploy to AWS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: My Step
        run: echo "Hello World"
        
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          architecture: x64
          check-latest: false
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN
          overwrite-settings: true
          job-status: success
          
      - name: Build JAR file
        run: |
          gradle build
          
      - name: List JAR file
        run: |
          ls 
          ls build/libs/
          pwd

      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID1 }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Build Docker image
        run: |
          docker build -t myapp:latest .
          export ECR_REPO_NAME=$(docker inspect --format='{{index .RepoTags 0}}' myapp:latest)
          echo "ECR_REPO_NAME=$ECR_REPO_NAME"
          docker run $ECR_REPO_NAME
      
      - name: Create ECR 
        run: |
          aws ecr describe-repositories --repository-names myapp --region us-east-1 > /dev/null 2>&1
          if [ $? -eq 0 ]; then
            aws ecr delete-repository --repository-name myapp --force --region us-east-1
          fi
          aws ecr create-repository --repository-name myapp --region us-east-1 --image-scanning-configuration scanOnPush=true
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker tag myapp:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/myapp:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/myapp:latest
          
      - name: Create ECS cluster
        run: |
          sudo curl -Lo /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
          sudo chmod +x /usr/local/bin/ecs-cli
          ecs-cli up --capability-iam --size 1 --instance-type t2.micro --cluster my-ecs-cluster123 --region ${AWS_REGION}

      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster my-ecs-cluster --service my-ecs-service --force-new-deployment --region ${AWS_REGION}

      

  
    
